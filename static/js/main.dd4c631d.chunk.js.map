{"version":3,"sources":["images/cpu.png","images/net.png","images/ram.png","helpers/costs.js","helpers/scatter.js","components/ControlPanel/Balance.js","components/ControlPanel/Priority.js","components/ControlPanel/Estimator.js","components/ControlPanel/ControlPanel.js","components/CPU.js","components/NET.js","components/RAM.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","rpc","JsonRpc","require","fetch","gettablerows","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","table","code","lower_bound","resp","_args","arguments","wrap","_context","prev","next","length","undefined","get_table_rows","json","scope","limit","sent","abrupt","stop","_x","apply","this","rexCost","_ref2","_callee2","howMuchNeedToRent","rexpool","rows","total_unlent","total_rent","resourcesFor1EOS","_context2","split","_x2","objectHash","cpu","_ref3","_callee3","cpu_weight","cpu_limit","pp_cpu","pp_cpu_rent","_context3","get_account","total_resources","max","net","_ref4","_callee4","net_weight","net_limit","pp_net","pp_net_rent","_context4","ram","_ref5","_callee5","quote","base","pp_byte","pp_kb","_context5","balance","round","num","places","toFixed","autoscaleBalance","_ref6","_callee6","account_name","_context6","_x3","ScatterJS","plugins","ScatterEOS","ScatterLynx","Api","scatter","identity","eos","account","network","Network","fromJson","blockchain","host","port","protocol","chainId","fullhost","tx","account_contract","account_method","data","completed","cancelled","x","transact","actions","name","authorization","actor","permission","authority","blocksBehind","expireSeconds","t0","console","log","message","toString","_x4","_x5","helpers_scatter","init","connect","error","getIdentity","accounts","beta3","logout","forgetIdentity","prioritize","priority","_x6","_x7","_x8","transfer","amt","from","to","quantity","concat","parseFloat","memo","_x9","_x10","_x11","autoscale","costs","_x12","ControlPanel","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","autoscale_balance","balance_loading","getBalance","bind","assertThisInitialized","setState","objectSpread","react_default","createElement","Placeholder","Paragraph","Line","Icon","color","React","Component","Priority","priorityError","loading","clickButtonLoading","priorityAfterUpdate","switchPriority","priorityCompleted","priorityCanceled","getPriority","genButton","e","target","value","parseInt","_this2","setTimeout","buttonNum","_this$state","isActivated","Boolean","buttonText","Button","basic","disabled","onClick","Segment","inverted","Table","Body","Row","positive","Cell","style","width","Estimator","payment","_window","window","cpu_prices","net_prices","ram_prices","days_cpu","days_net","days_ram","className","compact","connection","depositLoading","depositAmt","depositError","showBalance","openWallet","logoutScatter","transferTokens","setDepositAmt","depositCompleted","depositCanceled","location","reload","_this3","href","rel","cursor","Balance","depositEOS","Tab","Pane","Input","type","onChange","step","min","ControlPanel_Estimator","resourceSettings","ControlPanel_Priority","panes","menuItem","render","Modal","size","open","onClose","closeModal","Content","renderTable","renderTabs","Dimmer","active","Loader","Image","src","CPU","prices","Card","fluid","cpu_image","wrapped","ui","padding","Header","Description","extra","NET","net_image","RAM","ram_image","App","isOpen","openModal","preventDefault","components_ControlPanel_ControlPanel","Menu","fixed","Item","handleItemClick","position","fontWeight","Grid","textAlign","container","columns","stackable","Column","components_CPU","components_NET","components_RAM","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dd4c631d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cpu.593d32f1.png\";","module.exports = __webpack_public_path__ + \"static/media/net.453fd9e8.png\";","module.exports = __webpack_public_path__ + \"static/media/ram.63c78e1d.png\";","const { JsonRpc } = require('eosjs');\nconst rpc = new JsonRpc('https://nodes.get-scatter.com', { fetch });\n\nlet gettablerows = async (table,code='eosio',lower_bound='') => {\n    const resp = await rpc.get_table_rows({\n        json: true,              // Get the response as json\n        code,     // Contract that we target\n        scope: code,         // Account that owns the data\n        table,        // Table name\n        lower_bound,        // account name is held here\n        limit: 1               // Maximum number of rows that we want to get\n    });\n\n    return resp\n}\n\nlet rexCost =  async(howMuchNeedToRent) => {\n    // calculate how much it costs to rent\n    let rexpool = await gettablerows('rexpool')\n    let { rows } = rexpool\n    rows = rows[0]      // grab first row\n\n    // how much EOS staked you get from spending 1 EOS.\n    const total_unlent = rows.total_unlent.split(\" \")[0]\n    const total_rent = rows.total_rent.split(\" \")[0]\n    let resourcesFor1EOS = total_unlent / (total_rent + 1)\n\n    return howMuchNeedToRent / resourcesFor1EOS\n}\n\nlet cpu = async () => {\n    let resp = await rpc.get_account('cypherglasss')\n\n    const cpu_weight = resp.total_resources.cpu_weight.split(\" \")[0]\n    const cpu_limit = resp.cpu_limit.max\n    const cpu_avail = cpu_limit / 1000\n    const pp_cpu = cpu_weight / cpu_avail\n\n    // get rex (renatl) cost. (x1000 because in batches of 1000ms)\n    const pp_cpu_rent = await rexCost(pp_cpu*1000)\n\n    return { pp_cpu, pp_cpu_rent }\n}\n\nlet net = async () => {\n    let resp = await rpc.get_account('cypherglasss')\n\n    const net_weight = resp.total_resources.net_weight.split(\" \")[0]\n    const net_limit = resp.net_limit.max\n    const net_avail = net_limit / 1024\n    const pp_net = net_weight / net_avail\n\n    // get rex (renatl) cost. (x1000 because in batches of 1000ms)\n    const pp_net_rent = await rexCost(pp_net*1000)\n\n    \n    return { pp_net, pp_net_rent }\n}\n\nlet ram = async () => {\n    let resp = await gettablerows('rammarket')\n    let { rows } = resp\n    rows = rows[0]      // grab first row\n\n    // price per byte..\n    const quote = rows.quote.balance.split(\" \")[0]\n    const base = rows.base.balance.split(\" \")[0]\n    let pp_byte =  quote / base\n    let pp_kb = pp_byte * 1024\n    return {pp_byte, pp_kb}\n}\n\nlet round = (num,places=4) => {\n    if(!num) return num\n    return num.toFixed(places)\n}\n\nlet autoscaleBalance = async (account_name) => {\n    let balance = await gettablerows('deposits','autoscale.x',account_name)\n    return balance\n}\n\nlet objectHash = {\n    cpu,\n    net,\n    ram,\n    round,\n    autoscaleBalance\n}\n\nexport default objectHash;","// Importing Scatter and eosjs.\nimport ScatterJS, { Network } from 'scatterjs-core';\nimport ScatterEOS from 'scatterjs-plugin-eosjs2';\nimport ScatterLynx from 'scatterjs-plugin-lynx'\nimport { Api, JsonRpc } from 'eosjs';\nimport costs from './costs';\n\n// Scatter comes without plugins, so we need to add the eosjs plugin.\nScatterJS.plugins(new ScatterEOS(), new ScatterLynx({Api, JsonRpc}))\n\nconst network = Network.fromJson({\n    blockchain: 'eos',\n    host: 'nodes.get-scatter.com',\n    port: 443,\n    protocol: 'https',\n    chainId: 'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906' // <-- this is the MAINNET\n});\n\nconst rpc = new JsonRpc(network.fullhost());\n\nlet scatter, identity, eos, account;\n\nlet tx = async (account_contract, account_method, data, completed, cancelled) => {\n    try {\n        await eos.transact({\n            actions: [{\n                account: account_contract,      // 'eosio.token'\n                name: account_method,       // 'transfer'\n                authorization: [{\n                    actor: account.name,\n                    permission: account.authority,\n                }],\n                data\n            }]\n        }, {\n                blocksBehind: 3,\n                expireSeconds: 30,\n            });\n        //console.log(resp)\n        completed();\n    } catch (e) {\n        // do nothing..'      \n        console.log(e)\n        let x = e\n        if (x.message) x = x.message     // message provided. \n        cancelled(x.toString());\n\n    }\n}\n\n\n\nlet init = async () => {\n    let connected = await ScatterJS.scatter.connect('Autoscale')\n    if (!connected) {\n        // Either the user doesn't have Scatter, or it's closed.\n        console.error('Could not connect to Scatter.');\n        return;\n    }\n\n    scatter = ScatterJS.scatter;\n    identity = await scatter.getIdentity({ accounts: [network] });\n    eos = scatter.eos(network, Api, { rpc, beta3: true })\n    account = identity.accounts[0]\n\n    console.log(\"--\")\n    console.log(identity)\n\n    return { scatter, identity, eos, account }\n}\n\nlet logout = async () => {\n    await scatter.forgetIdentity();\n}\n\nlet prioritize = async (priority, completed, cancelled) => {\n    await tx('autoscale.x','prioritize',{\n        account: account.name,\n        priority\n    }, completed, cancelled)\n}\n\nlet transfer = async (amt, completed, cancelled) => {\n    await tx('eosio.token','transfer',{\n        from: account.name,\n        to: 'autoscale.x',\n        quantity: `${parseFloat(amt).toFixed(4)} EOS`,\n        memo: account.name\n    }, completed, cancelled)\n}\n\nlet autoscale = async(account_name) => {\n    let resp = await costs.autoscaleBalance(account_name)\n\n    // if a row was returned, and that row = the logged in account, update balance.\n    if (resp.rows.length && (resp.rows[0].account === account_name)) {\n        // return user\n        return resp.rows[0]\n    } else {\n        return null   // no autoscale found\n    }\n}\nexport default { init, logout, prioritize, transfer, autoscale }\n\n","import React from 'react';\nimport { Icon, Placeholder } from 'semantic-ui-react'\nimport scatter from '../../helpers/scatter'\n\n\nclass ControlPanel extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            autoscale_balance: 0,\n            balance_loading: true\n        }\n        this.getBalance = this.getBalance.bind(this)\n    }\n\n    async componentDidMount() {\n        await this.getBalance()\n    }\n\n    async getBalance() {\n        // load user autoscale balance\n        if (this.props.account) {\n            // set loader.\n            this.setState({ ...this.state, balance_loading: true })\n\n            let resp = await scatter.autoscale(this.props.account)\n            let autoscale_balance = 0\n\n            // does user have balance?\n            if (resp) { autoscale_balance = resp.balance / 10000 }\n\n            // turn off loader and set balance.\n            this.setState({ ...this.state, autoscale_balance, balance_loading: false })\n        }\n    }\n\n\n    render() {\n        // loading bar...\n        if (this.state.balance_loading)\n            return (\n                <Placeholder>\n                    <Placeholder.Paragraph>\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                    </Placeholder.Paragraph>\n                </Placeholder>\n            )\n\n        // load balance\n        return (\n            <div>\n                <h3>{this.state.autoscale_balance.toFixed(4)} EOS</h3>\n                {this.state.autoscale_balance === 0 ?\n                    <span>Autoscale off, Deposit EOS to enable. <Icon name=\"shield\" color='red' /></span> :\n                    this.state.autoscale_balance < .10 ?\n                    <span>Low balance, refill to avoid interruption. <Icon name=\"warning sign\" color='orange' /></span> :\n                        <span>Autoscale will monitor your account. <Icon name=\"check\" color='green' /></span>}\n            </div>\n        );\n    }\n}\n\nexport default ControlPanel;\n","import React from 'react';\nimport { Placeholder, Segment, Button, Table, Icon } from 'semantic-ui-react'\nimport scatter from '../../helpers/scatter'\n\n\nclass Priority extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            priorityError: '',\n            loading: false,\n            clickButtonLoading: false,\n            priority: null,       // default no priority\n            priorityAfterUpdate: null\n        }\n        this.switchPriority = this.switchPriority.bind(this)\n        this.priorityCompleted = this.priorityCompleted.bind(this)\n        this.priorityCanceled = this.priorityCanceled.bind(this)\n        this.getPriority = this.getPriority.bind(this)\n        this.genButton = this.genButton.bind(this)\n    }\n\n    async componentDidMount() {\n        await this.getPriority()\n    }\n\n    async getPriority() {\n        // load user autoscale balance\n        if (this.props.account) {\n            // set loader.\n            this.setState({ ...this.state, loading: true })\n\n            // priority = x\n            let priority = null   // no priority\n            let resp = await scatter.autoscale(this.props.account)  // get priority\n            if (resp) { priority = resp.priority }\n\n            // turn off loader and set balance.\n            this.setState({ ...this.state, priority, loading: false })\n        }\n    }\n\n    switchPriority(e) {\n        let priority = e.target.value\n        // save priority we selected (to apply after completion)\n        this.setState({ priorityAfterUpdate: priority, clickButtonLoading: parseInt(priority) })\n        scatter.prioritize(priority, this.priorityCompleted, this.priorityCanceled)\n    }\n\n    priorityCompleted() {\n        // apply saved priority..\n        this.setState({ ...this.state, clickButtonLoading: false, priority: parseInt(this.state.priorityAfterUpdate) })\n    }\n\n    priorityCanceled(e) {\n        this.setState({ ...this.state, clickButtonLoading: false, priorityError: e })\n        // remove priority error after 5 seconds\n        setTimeout(() => { this.setState({ ...this.state, priorityError: '' }) }, 5000)\n    }\n\n\n    genButton(buttonNum=1) {\n        //buttonNum = 1,2,0\n        let { clickButtonLoading, priority } = this.state\n        let isActivated = Boolean(priority === buttonNum)\n        let buttonText = isActivated ? 'Active' : 'Select'\n\n        if(priority===null) {\n            // no priority found\n            buttonText = 'Off'\n            isActivated = true  // activated buttons are disabled\n        }\n        return (\n            <Button basic loading={Boolean(clickButtonLoading===buttonNum)} disabled={isActivated} value={buttonNum} onClick={this.switchPriority}>{buttonText}</Button>\n        )\n    }\n    render() {\n\n        if (this.state.loading) {\n            // loading priority settings...\n            return (\n                <Placeholder>\n                    <Placeholder.Paragraph>\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                    </Placeholder.Paragraph>\n                </Placeholder>\n            )\n        }\n        return (\n            <div>\n                {this.state.priorityError ? <Segment inverted color='red'>{this.state.priorityError}</Segment> : null}\n\n                <Table basic='very'>\n\n                    <Table.Body>\n                        <Table.Row positive>\n                            <Table.Cell style={{ width: '70%' }}>\n                                <h4><Icon name='arrow alternate circle up' />CPU/NET ONLY</h4>\n                                Autoscale monitors account for sufficient CPU and NET resources but not RAM.\n                        </Table.Cell>\n                            <Table.Cell>{this.genButton(1)}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell>\n                                <h4><Icon name='plus circle' />CPU/NET + RAM</h4>\n                                Autoscale monitors all account resources. Note: RAM use depletes balance faster.\n                        </Table.Cell>\n                            <Table.Cell>{this.genButton(2)}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell>\n                                <h4><Icon name='pause circle' />PAUSE AUTOSCALE</h4>\n                                Autoscale will be turned off and not monitor your account for resources.\n                        </Table.Cell>\n                            <Table.Cell>{this.genButton(0)}</Table.Cell>\n                        </Table.Row>\n                    </Table.Body>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default Priority;\n\n\n\n\n","import React from 'react';\nimport { Table, Icon } from 'semantic-ui-react'\n\n\nclass Estimator extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n        }\n\n    }\n\n\n    render() {\n        let { payment } = this.props\n        if(!payment) payment = 1            // show 1 eos estimate if no input\n        if(payment > 100) payment = 100     // estimate up to 100 eos\n\n        let {cpu_prices, net_prices, ram_prices} = window\n        let days_cpu = cpu_prices ? parseInt((payment / cpu_prices.pp_cpu_rent) * 30) : 0\n        let days_net = net_prices ? parseInt((payment / net_prices.pp_net_rent) * 30) : 0\n        let days_ram = ram_prices ? parseInt((payment / (ram_prices.pp_byte * 1000)) * 30) : 0\n\n        return (\n            <div>\n            <div className=\"spacer\" />\n            <Table basic='very' compact='very'>\n                <Table.Body>\n                    <Table.Row>\n                        <Table.Cell>{parseFloat(payment).toFixed(4)} <br /> EOS Token = </Table.Cell>\n                        <Table.Cell><h4><Icon name='cog' color='grey' /> CPU</h4> {days_cpu} Days</Table.Cell>\n                        <Table.Cell><h4><Icon name='plug' color='grey' /> NET</h4> {days_net} Days</Table.Cell>\n                        <Table.Cell><h4><Icon name='globe' color='grey' /> RAM</h4>{days_ram} Days</Table.Cell>\n                    </Table.Row>\n                </Table.Body>\n            </Table>\n            <div className=\"spacer\" />\n            *Based on <i>current market prices</i>. Assumption of 1000ms CPU daily, 1000kb NET daily, or 1000bytes RAM monthly.\n            </div>\n        );\n    }\n}\n\nexport default Estimator;\n\n\n\n\n","import React from 'react';\nimport { Tab, Input, Modal, Loader, Button, Table, Dimmer, Image, Segment, Icon } from 'semantic-ui-react'\nimport scatter from '../../helpers/scatter'\n\nimport Balance from './Balance'\nimport Priority from './Priority';\nimport Estimator from './Estimator';\n\n\nclass ControlPanel extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      connection: false,\n      depositLoading: false,\n      depositAmt: 0.5,\n      depositError: '',\n      autoscale_balance: 0,\n      showBalance: true // render balance component\n    }\n    this.openWallet = this.openWallet.bind(this)\n    this.logoutScatter = this.logoutScatter.bind(this)\n    this.transferTokens = this.transferTokens.bind(this)\n    this.setDepositAmt = this.setDepositAmt.bind(this)\n    this.depositCompleted = this.depositCompleted.bind(this)\n    this.depositCanceled = this.depositCanceled.bind(this)\n  }\n\n  async componentDidMount() {\n    await this.openWallet()\n  }\n\n  async openWallet() {\n    let connection = await scatter.init()\n    console.log(\"connected\")\n    console.log(connection)\n\n    if (!this.state.connection) {\n      // save conn variable\n      this.setState({ ...this.state, connection })\n    }\n  }\n\n  logoutScatter() {\n    scatter.logout()\n    window.location.reload()\n  }\n\n  transferTokens() {\n    this.setState({ depositLoading: true })   // turns on loader\n    // invokes scatter, 2nd param called to stop loader on button.\n    scatter.transfer(this.state.depositAmt, this.depositCompleted, this.depositCanceled)\n  }\n\n  setDepositAmt(e) {\n    let depositAmt = e.target.value   // grab textinput val\n    this.setState({ ...this.state, depositAmt })    // save to state.\n  }\n\n  depositCompleted() {\n    // stops loading\n    this.setState({ ...this.state, depositLoading: false })\n    // refresh balance\n    setTimeout(() => {\n      this.setState({ ...this.state, showBalance: false }, () => {\n        this.setState({ ...this.state, showBalance: true })\n      })\n    }, 800)\n  }\n\n  depositCanceled(e) {\n    this.setState({ ...this.state, depositLoading: false, depositError: e })\n    // remove deposit error after 5 seconds\n    setTimeout(() => {this.setState({...this.state, depositError: ''})}, 5000)\n  }\n\n  renderTable(connection) {\n    let { account } = connection\n    return (\n      <Table basic='very'>\n\n        <Table.Body>\n          <Table.Row>\n            <Table.Cell width={4}>User Account</Table.Cell>\n            <Table.Cell>\n              <h2>\n                <span className=\"color\">{account.name}</span> &nbsp;\n            <a href={`https://bloks.io/account/${account.name}`} target=\"_blank\" rel=\"noopener noreferrer\"><Icon name=\"globe\"></Icon></a>\n                <Icon name=\"sign-out\" style={{ cursor: 'pointer' }} onClick={this.logoutScatter} />\n              </h2>\n            </Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>Autoscale Balance</Table.Cell>\n            <Table.Cell>\n              {this.state.showBalance ? <Balance account={account.name} /> : null}\n            </Table.Cell>\n          </Table.Row>\n        </Table.Body>\n      </Table>\n    )\n  }\n\n  renderTabs() {\n\n    let depositEOS = <Tab.Pane>\n      {this.state.depositError ? <Segment inverted color='red'>{this.state.depositError}</Segment> : null }\n      <Input style={{ width: '100px' }} type=\"number\" name=\"quantity\" onChange={this.setDepositAmt} value={this.state.depositAmt} step=\"0.1\" min=\"0\" max=\"99.9\" />\n      &nbsp;\n    <Button onClick={this.transferTokens} loading={this.state.depositLoading}>Deposit</Button>\n      <div className=\"spacer\" />\n      Initial deposit must be at least 0.25 EOS. <br />\n      You can also fund your account by sending EOS to <b>autoscale.x</b>\n      <Estimator payment={this.state.depositAmt} />\n    </Tab.Pane>\n\n    let resourceSettings = <Tab.Pane>\n      <Priority account={this.state.connection.account.name} />\n    </Tab.Pane>\n\n    const panes = [\n      { menuItem: 'Deposit EOS', render: () => depositEOS },\n      { menuItem: 'Settings', render: () => resourceSettings }\n    ]\n\n    return <Tab panes={panes} />\n\n  }\n\n  render() {\n    return (\n      <Modal size={'tiny'} open={true} onClose={this.props.closeModal}>\n        <Modal.Content>\n          {this.state.connection ?\n            <div>\n              {this.renderTable(this.state.connection)}\n              <div className=\"spacer\" />\n              {this.renderTabs()}\n            </div>\n\n            :\n            <div>\n              <Segment basic>\n                <Dimmer active inverted>\n                  <Loader inverted>Connecting...</Loader>\n                </Dimmer>\n                <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png' />\n              </Segment>\n              <Button onClick={this.openWallet}>Retry wallet</Button>\n            </div>\n\n          }\n        </Modal.Content>\n      </Modal>\n    );\n  }\n}\n\nexport default ControlPanel;\n","import React from 'react';\nimport { Card, Image, Placeholder } from 'semantic-ui-react'\nimport cpu_image from '../images/cpu.png'\nimport costs from '../helpers/costs'\n\nclass CPU extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            prices: false\n        }\n    }\n\n    async componentDidMount() {\n        let prices = await costs.cpu()\n        window.cpu_prices = prices\n        this.setState({ prices })\n    }\n\n    render() {\n        return (\n\n            <Card fluid>\n                <Image src={cpu_image} wrapped ui={false} style={{ 'padding': '2em' }} />\n                <Card.Content>\n                    <Card.Header>CPU</Card.Header>\n                    <Card.Description>\n                        Amount of time the network can spend processing your transactions.\n                  </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                    {this.state.prices ?\n                        <table>\n                            <tbody>\n                                <tr>\n                                    <td>30-day Cost:</td>\n                                    <td><h3 className='color'>{costs.round(this.state.prices.pp_cpu_rent, 6)} EOS</h3></td>\n                                </tr>\n                                <tr>\n                                    <td></td>\n                                    <td>for 1.0s CPU Daily</td>\n                                </tr>\n                                <tr>\n                                    <td>Source:</td>\n                                    <td>eosio.rexpool</td>\n                                </tr>\n                                <tr>\n                                    <td>Stake Basis:</td>\n                                    <td>1ms for {costs.round(this.state.prices.pp_cpu, 4)} EOS</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        :\n                        <Placeholder>\n                            <Placeholder.Paragraph>\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                            </Placeholder.Paragraph>\n                        </Placeholder>\n                    }\n                </Card.Content>\n            </Card>\n\n        );\n    }\n}\n\nexport default CPU;\n","import React from 'react';\nimport { Card, Image, Placeholder } from 'semantic-ui-react'\nimport net_image from '../images/net.png'\nimport costs from '../helpers/costs'\n\nclass NET extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            prices: false\n        }\n    }\n\n    async componentDidMount() {\n        let prices = await costs.net()\n        window.net_prices = prices\n        this.setState({ prices })\n    }\n\n    render() {\n        return (\n\n            <Card fluid>\n                <Image src={net_image} wrapped ui={false} style={{ 'padding': '2em' }} />\n                <Card.Content>\n                    <Card.Header>NET</Card.Header>\n                    <Card.Description>\n                        Amount of data the network can transfer during your transactions.\n                  </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                    {this.state.prices ?\n                        <table>\n                            <tbody>\n                                <tr>\n                                    <td>30-day Cost:</td>\n                                    <td><h3 className='color'>{costs.round(this.state.prices.pp_net_rent, 6)} EOS</h3></td>\n                                </tr>\n                                <tr>\n                                    <td></td>\n                                    <td>for 1mb NET Daily</td>\n                                </tr>\n                                <tr>\n                                    <td>Source:</td>\n                                    <td>eosio.rexpool</td>\n                                </tr>\n                                <tr>\n                                    <td>Stake Basis:</td>\n                                    <td>1kb for {costs.round(this.state.prices.pp_net, 4)} EOS</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        :\n                        <Placeholder>\n                            <Placeholder.Paragraph>\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                            </Placeholder.Paragraph>\n                        </Placeholder>\n                    }\n                </Card.Content>\n            </Card>\n\n        );\n    }\n}\n\nexport default NET;\n","import React from 'react';\nimport { Card, Image, Placeholder } from 'semantic-ui-react'\nimport ram_image from '../images/ram.png'\nimport costs from '../helpers/costs'\n\nclass RAM extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            prices: false\n        }\n    }\n\n    async componentDidMount() {\n        let prices = await costs.ram()\n        window.ram_prices = prices\n        this.setState({ prices })\n    }\n\n    render() {\n        return (\n\n            <Card fluid>\n                <Image src={ram_image} wrapped ui={false} style={{ 'padding': '2em' }} />\n                <Card.Content>\n                    <Card.Header>RAM</Card.Header>\n                    <Card.Description>\n                        Storage for application data and smart contracts on the blockchain.\n              </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                    {this.state.prices ?\n                        <table>\n                            <tbody>\n                                <tr>\n                                    <td>Exchange:</td>\n                                    <td><h3 className='color'>1kb = {costs.round(this.state.prices.pp_kb, 4)} EOS</h3></td>\n                                </tr>\n                                <tr>\n                                    <td></td>\n                                    <td>{costs.round(this.state.prices.pp_byte, 8)} / byte</td>\n                                </tr>\n                                <tr>\n                                    <td>Source:</td>\n                                    <td>eosio.rammarket</td>\n                                </tr>\n                                <tr>\n                                    <td>Unit Type:</td>\n                                    <td>bytes</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        :\n                        <Placeholder>\n                            <Placeholder.Paragraph>\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                            </Placeholder.Paragraph>\n                        </Placeholder>\n                    }\n                </Card.Content>\n            </Card>\n\n        );\n    }\n}\n\nexport default RAM;\n","import React from 'react';\nimport { Grid, Menu, Icon } from 'semantic-ui-react'\nimport './index.css'\n\nimport ControlPanel from './components/ControlPanel/ControlPanel'\nimport CPUCard from './components/CPU'\nimport NETCard from './components/NET'\nimport RAMCard from './components/RAM'\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      isOpen: false\n    }\n    this.closeModal = this.closeModal.bind(this)\n    this.openModal = this.openModal.bind(this)\n  }\n\n  closeModal(e) {\n    if (e) e.preventDefault()\n    this.setState({ isOpen: false })\n  }\n\n  openModal(e) {\n    if (e) e.preventDefault()\n    this.setState({ isOpen: true })\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n\n        { this.state.isOpen ? <ControlPanel closeModal={this.closeModal} /> : null }\n\n\n        <Menu fixed='top'>\n          <Menu.Item name='home' onClick={this.handleItemClick}>\n            <a href=\"https://autoscale.one\" style={{color:'black'}}>\n            <b>Autoscale</b> <span className=\"hide_small\">&nbsp; | &nbsp; Automatic Scaling</span> for EOS\n            </a>\n        </Menu.Item>\n        <Menu.Menu position='right'>\n            <Menu.Item style={{fontWeight:'bold'}} name='manager' onClick={this.openModal}>\n              <span className='color'><Icon name='rocket' /> Scaling Manager</span>\n            </Menu.Item>\n          </Menu.Menu>\n        </Menu>\n\n        <div className='header_spacer'>&nbsp;</div>\n\n        <Grid textAlign='center'>\n          <Grid container columns={3} stackable>\n            <Grid.Column textAlign='center'>\n              <CPUCard />\n            </Grid.Column>\n            <Grid.Column>\n              <NETCard />\n            </Grid.Column>\n            <Grid.Column>\n              <RAMCard />\n            </Grid.Column>\n          </Grid>\n        </Grid>\n\n        <br />\n        <div>Deposit EOS directly to <b>autoscale.x</b> or use the <b className=\"color\" style={{cursor:'pointer'}} onClick={this.openModal}>scaling manager</b>.</div>\n      </div >\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}