{"version":3,"sources":["images/cpu.png","images/net.png","images/ram.png","helpers/scatter.js","helpers/costs.js","components/ControlPanel/Balance.js","components/ControlPanel/Priority.js","components/ControlPanel/ControlPanel.js","components/CPU.js","components/NET.js","components/RAM.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ScatterJS","plugins","ScatterEOS","scatter","identity","eos","account","network","Network","fromJson","blockchain","host","port","protocol","chainId","rpc","JsonRpc","fullhost","helpers_scatter","init","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","connect","sent","console","error","abrupt","getIdentity","accounts","Api","log","stop","apply","this","arguments","logout","_ref2","_callee2","_context2","forgetIdentity","transfer","_ref3","_callee3","amt","completed","_context3","transact","actions","name","authorization","actor","permission","authority","data","from","to","quantity","concat","memo","blocksBehind","expireSeconds","t0","_x","_x2","require","fetch","gettablerows","table","code","lower_bound","resp","_args","length","undefined","get_table_rows","json","scope","limit","rexCost","howMuchNeedToRent","rexpool","rows","total_unlent","total_rent","resourcesFor1EOS","split","objectHash","cpu","cpu_weight","cpu_limit","pp_cpu","pp_cpu_rent","get_account","total_resources","max","net","_ref4","_callee4","net_weight","net_limit","pp_net","pp_net_rent","_context4","ram","_ref5","_callee5","quote","base","pp_byte","pp_kb","_context5","balance","round","num","places","toFixed","autoscaleBalance","_ref6","_callee6","account_name","_context6","_x3","ControlPanel","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","autoscale_balance","balance_loading","getBalance","bind","assertThisInitialized","setState","objectSpread","costs","react_default","createElement","Placeholder","Paragraph","Line","React","Component","Priority","switchPriority","alert","Table","basic","Body","Row","positive","Cell","style","width","Icon","Button","disabled","onClick","connection","depositLoading","depositAmt","openWallet","logoutScatter","transferTokens","setDepositAmt","depositCompleted","window","location","reload","e","target","value","className","href","rel","cursor","Balance","Input","type","onChange","step","min","loading","ControlPanel_Priority","Modal","size","open","onClose","closeModal","Content","renderTable","Segment","Dimmer","active","inverted","Loader","Image","src","CPU","prices","Card","fluid","cpu_image","wrapped","ui","padding","Header","Description","extra","NET","net_image","RAM","ram_image","App","isOpen","openModal","preventDefault","components_ControlPanel_ControlPanel","Menu","fixed","Item","handleItemClick","color","position","fontWeight","Grid","textAlign","container","columns","stackable","Column","components_CPU","components_NET","components_RAM","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9690d5fe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cpu.593d32f1.png\";","module.exports = __webpack_public_path__ + \"static/media/net.453fd9e8.png\";","module.exports = __webpack_public_path__ + \"static/media/ram.63c78e1d.png\";","// Importing Scatter and eosjs.\nimport ScatterJS, { Network } from 'scatterjs-core';\nimport ScatterEOS from 'scatterjs-plugin-eosjs2';\nimport { Api, JsonRpc } from 'eosjs';\n// Scatter comes without plugins, so we need to add the eosjs plugin.\nScatterJS.plugins(new ScatterEOS())\n\nconst network = Network.fromJson({\n    blockchain: 'eos',\n    host: 'nodes.get-scatter.com',\n    port: 443,\n    protocol: 'https',\n    chainId: 'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906' // <-- this is the MAINNET\n});\n\nconst rpc = new JsonRpc(network.fullhost());\n\nlet scatter, identity, eos, account;\n\nlet init = async () => {\n    let connected = await ScatterJS.scatter.connect('Autoscale')\n    if(!connected){\n        // Either the user doesn't have Scatter, or it's closed.\n        console.error('Could not connect to Scatter.');\n        return;\n    }\n    \n    scatter = ScatterJS.scatter;\n    identity = await scatter.getIdentity({accounts:[network]});\n    eos = scatter.eos(network, Api, {rpc})\n    account = identity.accounts[0]\n\n    console.log(\"--\")\n    console.log(identity)\n\n    return { scatter, identity, eos, account }\n}\n\nlet logout = async() => {\n    await scatter.forgetIdentity();\n}\n\nlet transfer = async(amt,completed) => {\n    try {\n        await eos.transact({\n            actions: [{\n                account: 'eosio.token',\n                name: 'transfer',\n                authorization: [{\n                    actor: account.name,\n                    permission: account.authority,\n                }],\n                data: {\n                    from: account.name,\n                    to: 'autoscale.x',\n                    quantity: `${amt} EOS`,\n                    memo: account.name,\n                },\n            }]\n        }, {\n            blocksBehind: 3,\n            expireSeconds: 30,\n        });\n        completed();\n    } catch (e) {\n        completed();\n    }\n}\n\nexport default { init, logout, transfer }\n\n","const { JsonRpc } = require('eosjs');\nconst rpc = new JsonRpc('https://nodes.get-scatter.com', { fetch });\n\nlet gettablerows = async (table,code='eosio',lower_bound='') => {\n    const resp = await rpc.get_table_rows({\n        json: true,              // Get the response as json\n        code,     // Contract that we target\n        scope: code,         // Account that owns the data\n        table,        // Table name\n        lower_bound,        // account name is held here\n        limit: 1               // Maximum number of rows that we want to get\n    });\n\n    return resp\n}\n\nlet rexCost =  async(howMuchNeedToRent) => {\n    // calculate how much it costs to rent\n    let rexpool = await gettablerows('rexpool')\n    let { rows } = rexpool\n    rows = rows[0]      // grab first row\n\n    // how much EOS staked you get from spending 1 EOS.\n    const total_unlent = rows.total_unlent.split(\" \")[0]\n    const total_rent = rows.total_rent.split(\" \")[0]\n    let resourcesFor1EOS = total_unlent / (total_rent + 1)\n\n    return howMuchNeedToRent / resourcesFor1EOS\n}\n\nlet cpu = async () => {\n    let resp = await rpc.get_account('cypherglasss')\n\n    const cpu_weight = resp.total_resources.cpu_weight.split(\" \")[0]\n    const cpu_limit = resp.cpu_limit.max\n    const cpu_avail = cpu_limit / 1000\n    const pp_cpu = cpu_weight / cpu_avail\n\n    // get rex (renatl) cost. (x1000 because in batches of 1000ms)\n    const pp_cpu_rent = await rexCost(pp_cpu*1000)\n\n    return { pp_cpu, pp_cpu_rent }\n}\n\nlet net = async () => {\n    let resp = await rpc.get_account('cypherglasss')\n\n    const net_weight = resp.total_resources.net_weight.split(\" \")[0]\n    const net_limit = resp.net_limit.max\n    const net_avail = net_limit / 1024\n    const pp_net = net_weight / net_avail\n\n    // get rex (renatl) cost. (x1000 because in batches of 1000ms)\n    const pp_net_rent = await rexCost(pp_net*1000)\n\n    \n    return { pp_net, pp_net_rent }\n}\n\nlet ram = async () => {\n    let resp = await gettablerows('rammarket')\n    let { rows } = resp\n    rows = rows[0]      // grab first row\n\n    // price per byte..\n    const quote = rows.quote.balance.split(\" \")[0]\n    const base = rows.base.balance.split(\" \")[0]\n    let pp_byte =  quote / base\n    let pp_kb = pp_byte * 1024\n    return {pp_byte, pp_kb}\n}\n\nlet round = (num,places=4) => {\n    if(!num) return num\n    return num.toFixed(places)\n}\n\nlet autoscaleBalance = async (account_name) => {\n    let balance = await gettablerows('deposits','autoscale.x',account_name)\n    return balance\n}\n\nlet objectHash = {\n    cpu,\n    net,\n    ram,\n    round,\n    autoscaleBalance\n}\n\nexport default objectHash;","import React from 'react';\nimport { Placeholder } from 'semantic-ui-react'\n\nimport costs from '../../helpers/costs'\n\n\nclass ControlPanel extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            autoscale_balance: 0,\n            balance_loading: true\n        }\n        this.getBalance = this.getBalance.bind(this)\n    }\n\n    async componentDidMount() {\n        await this.getBalance()\n    }\n\n    async getBalance() {\n        // load user autoscale balance\n        if (this.props.account) {\n            // set loader.\n            this.setState({ ...this.state, balance_loading: true })\n\n            let resp = await costs.autoscaleBalance(this.props.account)\n            let autoscale_balance = 0\n            if (resp.rows.length) {\n                // user has a balance\n                autoscale_balance = resp.rows[0].balance / 10000\n            }\n\n            // turn off loader and set balance.\n            this.setState({ ...this.state, autoscale_balance, balance_loading: false })\n        }\n    }\n\n\n    render() {\n        // loading bar...\n        if (this.state.balance_loading)\n            return (\n                <Placeholder>\n                    <Placeholder.Paragraph>\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                    </Placeholder.Paragraph>\n                </Placeholder>\n            )\n\n        // load balance\n        return (\n            <div>\n                <h3>{costs.round(this.state.autoscale_balance, 4)} EOS</h3>\n                {this.state.autoscale_balance === 0 ?\n                    'Account not protected, please deposit tokens.' :\n                    this.state.autoscale_balance < .10 ?\n                        'Low Balance, account may be unstable.' :\n                        'Your account is protected.'}\n            </div>\n        );\n    }\n}\n\nexport default ControlPanel;\n","import React from 'react';\nimport { Button, Table, Icon } from 'semantic-ui-react'\n\n\nclass Priority extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n        }\n        this.switchPriority = this.switchPriority.bind(this)\n    }\n\n    switchPriority() {\n        alert(\"Coming soon..\")\n    }\n\n    render() {\n        return (\n            <Table basic='very'>\n\n                <Table.Body>\n                    <Table.Row positive>\n                        <Table.Cell style={{width:'70%'}}>\n                            <h4><Icon name='arrow alternate circle up' />CPU/NET ONLY</h4>\n                            Autoscale monitors account for CPU and NET resources but not RAM.\n                        </Table.Cell>                        \n                        <Table.Cell><Button basic disabled>Active</Button></Table.Cell>\n                    </Table.Row>\n                    <Table.Row>\n                    <Table.Cell>\n                            <h4><Icon name='plus circle' />CPU/NET +RAM</h4>\n                            Autoscale monitors all resources. RAM usage depleted balance faster.\n                        </Table.Cell> \n                        <Table.Cell><Button basic onClick={this.switchPriority}>Switch</Button></Table.Cell>\n                    </Table.Row>\n                    <Table.Row>\n                        <Table.Cell>\n                            <h4><Icon name='pause circle' />PAUSE AUTOSCALE</h4>\n                            Autoscale will be turned off and not monitor your account.\n                        </Table.Cell>\n                        <Table.Cell><Button basic onClick={this.switchPriority}>Switch</Button></Table.Cell>\n                    </Table.Row>                    \n                </Table.Body>\n            </Table>\n        );\n    }\n}\n\nexport default Priority;\n\n\n\n\n","import React from 'react';\nimport { Input, Modal, Loader, Button, Table, Dimmer, Image, Segment, Icon } from 'semantic-ui-react'\nimport scatter from '../../helpers/scatter'\n\nimport Balance from './Balance'\nimport Priority from './Priority';\n\n\nclass ControlPanel extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      connection: false,\n      depositLoading: false,\n      depositAmt: 1.0,\n      autoscale_balance: 0\n    }\n    this.openWallet = this.openWallet.bind(this)\n    this.logoutScatter = this.logoutScatter.bind(this)\n    this.transferTokens = this.transferTokens.bind(this)\n    this.setDepositAmt = this.setDepositAmt.bind(this)\n    this.depositCompleted = this.depositCompleted.bind(this)\n  }\n\n  async componentDidMount() {\n      await this.openWallet()\n  }\n\n  async openWallet() {\n    let connection = await scatter.init()\n    console.log(\"connected\")\n    console.log(connection)\n    \n    if (!this.state.connection) {\n      // save conn variable\n      this.setState({ ...this.state, connection })\n    }\n  }\n\n  logoutScatter() {\n    scatter.logout()\n    window.location.reload()\n  }\n\n  transferTokens() {\n    this.setState({depositLoading: true})   // turns on loader\n    // invokes scatter, 2nd param called to stop loader on button.\n    scatter.transfer(this.state.depositAmt, this.depositCompleted) \n  }\n\n  setDepositAmt(e) {\n    let depositAmt = e.target.value   // grab textinput val\n    this.setState({...this.state, depositAmt})    // save to state.\n  }\n\n  depositCompleted() {\n    // stops loading\n    this.setState({...this.state, depositLoading: false})\n    // get new balance\n    this.getBalance()\n  }\n\n  renderTable(connection) {\n    let {account} = connection\n    return (\n      <Table basic='very'>\n      \n      <Table.Body>\n        <Table.Row>\n          <Table.Cell width={4}>User Account</Table.Cell>\n          <Table.Cell>\n            <h2>\n            <span className=\"color\">{account.name}</span> &nbsp; \n            <a href={`https://bloks.io/account/${account.name}`} target=\"_blank\" rel=\"noopener noreferrer\"><Icon name=\"globe\"></Icon></a>\n            <Icon name=\"sign-out\" style={{cursor:'pointer'}} onClick={this.logoutScatter} />\n            </h2>\n          </Table.Cell>\n        </Table.Row>\n        <Table.Row>\n          <Table.Cell>Autoscale Balance</Table.Cell>\n          <Table.Cell>\n            <Balance account={account.name} />\n          </Table.Cell>\n        </Table.Row>\n        <Table.Row>\n          <Table.Cell>Deposit EOS</Table.Cell>\n          <Table.Cell>\n            <Input type=\"number\" name=\"quantity\" onChange={this.setDepositAmt} value={this.state.depositAmt} step=\"0.1\" min=\"0\" max=\"500\" /> \n            &nbsp; \n            <Button disabled={true} onClick={this.transferTokens} loading={this.state.depositLoading}>Deposit</Button>\n            <div className=\"spacer\" />\n            You can also send EOS tokens to <b>autoscale.x</b>\n          </Table.Cell>\n        </Table.Row>\n        <Table.Row>\n          <Table.Cell>Resource Settings <br /></Table.Cell>\n          <Table.Cell>\n\n            <Priority />\n                 \n          </Table.Cell>\n        </Table.Row>\n      </Table.Body>\n  \n\n    </Table>\n    )\n  }\n\n  render() {\n    return (\n      <Modal size={'tiny'} open={true} onClose={this.props.closeModal}>\n        <Modal.Content>\n          {this.state.connection ?     \n            this.renderTable(this.state.connection)\n          :\n            <div>\n              <Segment basic>\n                <Dimmer active inverted>\n                  <Loader inverted>Connecting to Scatter...</Loader>\n                </Dimmer>\n                <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png' />\n              </Segment>\n              <Button onClick={this.openWallet}>Retry wallet</Button>\n            </div>\n\n          }\n        </Modal.Content>\n      </Modal>\n    );\n  }\n}\n\nexport default ControlPanel;\n","import React from 'react';\nimport { Card, Image, Placeholder } from 'semantic-ui-react'\nimport cpu_image from '../images/cpu.png'\nimport costs from '../helpers/costs'\n\nclass CPU extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            prices: false\n        }\n    }\n\n    async componentDidMount() {\n        let prices = await costs.cpu()\n        this.setState({ prices })\n    }\n\n    render() {\n        return (\n\n            <Card fluid>\n                <Image src={cpu_image} wrapped ui={false} style={{ 'padding': '2em' }} />\n                <Card.Content>\n                    <Card.Header>CPU</Card.Header>\n                    <Card.Description>\n                        Amount of time the network can spend processing your transactions.\n                  </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                    {this.state.prices ?\n                        <table>\n                            <tbody>\n                                <tr>\n                                    <td>30-day Cost:</td>\n                                    <td><h3 className='color'>{costs.round(this.state.prices.pp_cpu_rent, 6)} EOS</h3></td>\n                                </tr>\n                                <tr>\n                                    <td></td>\n                                    <td>for 1.0s CPU Daily</td>\n                                </tr>\n                                <tr>\n                                    <td>Source:</td>\n                                    <td>eosio.rexpool</td>\n                                </tr>\n                                <tr>\n                                    <td>Stake Basis:</td>\n                                    <td>1ms for {costs.round(this.state.prices.pp_cpu, 4)} EOS</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        :\n                        <Placeholder>\n                            <Placeholder.Paragraph>\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                            </Placeholder.Paragraph>\n                        </Placeholder>\n                    }\n                </Card.Content>\n            </Card>\n\n        );\n    }\n}\n\nexport default CPU;\n","import React from 'react';\nimport { Card, Image, Placeholder } from 'semantic-ui-react'\nimport net_image from '../images/net.png'\nimport costs from '../helpers/costs'\n\nclass NET extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            prices: false\n        }\n    }\n\n    async componentDidMount() {\n        let prices = await costs.net()\n        this.setState({ prices })\n    }\n\n    render() {\n        return (\n\n            <Card fluid>\n                <Image src={net_image} wrapped ui={false} style={{ 'padding': '2em' }} />\n                <Card.Content>\n                    <Card.Header>NET</Card.Header>\n                    <Card.Description>\n                        Amount of data the network can transfer during your transactions.\n                  </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                    {this.state.prices ?\n                        <table>\n                            <tbody>\n                                <tr>\n                                    <td>30-day Cost:</td>\n                                    <td><h3 className='color'>{costs.round(this.state.prices.pp_net_rent, 6)} EOS</h3></td>\n                                </tr>\n                                <tr>\n                                    <td></td>\n                                    <td>for 1mb NET Daily</td>\n                                </tr>\n                                <tr>\n                                    <td>Source:</td>\n                                    <td>eosio.rexpool</td>\n                                </tr>\n                                <tr>\n                                    <td>Stake Basis:</td>\n                                    <td>1kb for {costs.round(this.state.prices.pp_net, 4)} EOS</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        :\n                        <Placeholder>\n                            <Placeholder.Paragraph>\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                            </Placeholder.Paragraph>\n                        </Placeholder>\n                    }\n                </Card.Content>\n            </Card>\n\n        );\n    }\n}\n\nexport default NET;\n","import React from 'react';\nimport { Card, Image, Placeholder } from 'semantic-ui-react'\nimport ram_image from '../images/ram.png'\nimport costs from '../helpers/costs'\n\nclass RAM extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            prices: false\n        }\n    }\n\n    async componentDidMount() {\n        let prices = await costs.ram()\n        this.setState({ prices })\n    }\n\n    render() {\n        return (\n\n            <Card fluid>\n                <Image src={ram_image} wrapped ui={false} style={{ 'padding': '2em' }} />\n                <Card.Content>\n                    <Card.Header>RAM</Card.Header>\n                    <Card.Description>\n                        Storage for application data and smart contracts on the blockchain.\n              </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                    {this.state.prices ?\n                        <table>\n                            <tbody>\n                                <tr>\n                                    <td>Exchange:</td>\n                                    <td><h3 className='color'>1kb = {costs.round(this.state.prices.pp_kb, 4)} EOS</h3></td>\n                                </tr>\n                                <tr>\n                                    <td></td>\n                                    <td>{costs.round(this.state.prices.pp_byte, 8)} / byte</td>\n                                </tr>\n                                <tr>\n                                    <td>Source:</td>\n                                    <td>eosio.rammarket</td>\n                                </tr>\n                                <tr>\n                                    <td>Unit Type:</td>\n                                    <td>bytes</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        :\n                        <Placeholder>\n                            <Placeholder.Paragraph>\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                            </Placeholder.Paragraph>\n                        </Placeholder>\n                    }\n                </Card.Content>\n            </Card>\n\n        );\n    }\n}\n\nexport default RAM;\n","import React from 'react';\nimport { Grid, Menu, Icon } from 'semantic-ui-react'\nimport './index.css'\n\nimport ControlPanel from './components/ControlPanel/ControlPanel'\nimport CPUCard from './components/CPU'\nimport NETCard from './components/NET'\nimport RAMCard from './components/RAM'\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      isOpen: false\n    }\n    this.closeModal = this.closeModal.bind(this)\n    this.openModal = this.openModal.bind(this)\n  }\n\n  closeModal(e) {\n    if (e) e.preventDefault()\n    this.setState({ isOpen: false })\n  }\n\n  openModal(e) {\n    if (e) e.preventDefault()\n    this.setState({ isOpen: true })\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n\n        { this.state.isOpen ? <ControlPanel closeModal={this.closeModal} /> : null }\n\n\n        <Menu fixed='top'>\n          <Menu.Item name='home' onClick={this.handleItemClick}>\n            <a href=\"https://autoscale.one\" style={{color:'black'}}>\n            <b>Autoscale</b> <span className=\"hide_small\">&nbsp; | &nbsp; Automatic Scaling</span> for EOS\n            </a>\n        </Menu.Item>\n        <Menu.Menu position='right'>\n            <Menu.Item style={{fontWeight:'bold'}} name='manager' onClick={this.openModal}>\n              <span className='color'><Icon name='rocket' /> Scaling Manager</span>\n            </Menu.Item>\n          </Menu.Menu>\n        </Menu>\n\n        <div className='header_spacer'>&nbsp;</div>\n\n        <Grid textAlign='center'>\n          <Grid container columns={3} stackable>\n            <Grid.Column textAlign='center'>\n              <CPUCard />\n            </Grid.Column>\n            <Grid.Column>\n              <NETCard />\n            </Grid.Column>\n            <Grid.Column>\n              <RAMCard />\n            </Grid.Column>\n          </Grid>\n        </Grid>\n\n        <br />\n        <div>Deposit EOS directly to <b>autoscale.x</b> or use the <b className=\"color\" style={{cursor:'pointer'}} onClick={this.openModal}>scaling manager</b>.</div>\n      </div >\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}