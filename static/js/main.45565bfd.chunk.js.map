{"version":3,"sources":["images/cpu.png","images/net.png","images/ram.png","helpers/scatter.js","helpers/costs.js","components/ControlPanel/Balance.js","components/ControlPanel/Priority.js","components/ControlPanel/Estimator.js","components/ControlPanel/ControlPanel.js","components/CPU.js","components/NET.js","components/RAM.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ScatterJS","plugins","ScatterEOS","scatter","identity","eos","account","network","Network","fromJson","blockchain","host","port","protocol","chainId","rpc","JsonRpc","fullhost","helpers_scatter","init","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","connect","sent","console","error","abrupt","getIdentity","accounts","Api","beta3","log","stop","apply","this","arguments","logout","_ref2","_callee2","_context2","forgetIdentity","transfer","_ref3","_callee3","amt","completed","cancelled","resp","_context3","transact","actions","name","authorization","actor","permission","authority","data","from","to","quantity","concat","parseFloat","toFixed","memo","blocksBehind","expireSeconds","t0","_x","_x2","_x3","require","fetch","gettablerows","table","code","lower_bound","_args","length","undefined","get_table_rows","json","scope","limit","rexCost","howMuchNeedToRent","rexpool","rows","total_unlent","total_rent","resourcesFor1EOS","split","objectHash","cpu","cpu_weight","cpu_limit","pp_cpu","pp_cpu_rent","get_account","total_resources","max","net","_ref4","_callee4","net_weight","net_limit","pp_net","pp_net_rent","_context4","ram","_ref5","_callee5","quote","base","pp_byte","pp_kb","_context5","balance","round","num","places","autoscaleBalance","_ref6","_callee6","account_name","_context6","ControlPanel","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","autoscale_balance","balance_loading","getBalance","bind","assertThisInitialized","setState","objectSpread","costs","react_default","createElement","Placeholder","Paragraph","Line","Icon","color","React","Component","Priority","switchPriority","alert","Table","basic","Body","Row","positive","Cell","style","width","Button","disabled","onClick","Estimator","payment","_window","window","cpu_prices","net_prices","ram_prices","days_cpu","parseInt","days_net","days_ram","compact","connection","depositLoading","depositAmt","showBalance","openWallet","logoutScatter","transferTokens","setDepositAmt","depositCompleted","depositCanceled","location","reload","e","target","value","_this2","setTimeout","className","href","rel","cursor","Balance","depositEOS","Tab","Pane","Input","type","onChange","min","loading","ControlPanel_Estimator","resourceSettings","ControlPanel_Priority","panes","menuItem","render","Modal","size","open","onClose","closeModal","Content","renderTable","renderTabs","Segment","Dimmer","active","inverted","Loader","Image","src","CPU","prices","Card","fluid","cpu_image","wrapped","ui","padding","Header","Description","extra","NET","net_image","RAM","ram_image","App","isOpen","openModal","preventDefault","components_ControlPanel_ControlPanel","Menu","fixed","Item","handleItemClick","position","fontWeight","Grid","textAlign","container","columns","stackable","Column","components_CPU","components_NET","components_RAM","Boolean","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.45565bfd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cpu.593d32f1.png\";","module.exports = __webpack_public_path__ + \"static/media/net.453fd9e8.png\";","module.exports = __webpack_public_path__ + \"static/media/ram.63c78e1d.png\";","// Importing Scatter and eosjs.\nimport ScatterJS, { Network } from 'scatterjs-core';\nimport ScatterEOS from 'scatterjs-plugin-eosjs2';\nimport { Api, JsonRpc } from 'eosjs';\n// Scatter comes without plugins, so we need to add the eosjs plugin.\nScatterJS.plugins(new ScatterEOS())\n\nconst network = Network.fromJson({\n    blockchain: 'eos',\n    host: 'nodes.get-scatter.com',\n    port: 443,\n    protocol: 'https',\n    chainId: 'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906' // <-- this is the MAINNET\n});\n\nconst rpc = new JsonRpc(network.fullhost());\n\nlet scatter, identity, eos, account;\n\nlet init = async () => {\n    let connected = await ScatterJS.scatter.connect('Autoscale')\n    if(!connected){\n        // Either the user doesn't have Scatter, or it's closed.\n        console.error('Could not connect to Scatter.');\n        return;\n    }\n    \n    scatter = ScatterJS.scatter;\n    identity = await scatter.getIdentity({accounts:[network]});\n    eos = scatter.eos(network, Api, {rpc, beta3: true})\n    account = identity.accounts[0]\n\n    console.log(\"--\")\n    console.log(identity)\n\n    return { scatter, identity, eos, account }\n}\n\nlet logout = async() => {\n    await scatter.forgetIdentity();\n}\n\nlet transfer = async(amt,completed,cancelled) => {\n    try {\n        let resp = await eos.transact({\n            actions: [{\n                account: 'eosio.token',\n                name: 'transfer',\n                authorization: [{\n                    actor: account.name,\n                    permission: account.authority,\n                }],\n                data: {\n                    from: account.name,\n                    to: 'autoscale.x',\n                    quantity: `${parseFloat(amt).toFixed(4)} EOS`,\n                    memo: account.name,\n                },\n            }]\n        }, {\n            blocksBehind: 3,\n            expireSeconds: 30,\n        });\n        console.log(resp)\n        completed();\n    } catch (e) {\n        // do nothing..\n        if(e) console.log(e)\n        cancelled();\n    }\n}\n\nexport default { init, logout, transfer }\n\n","const { JsonRpc } = require('eosjs');\nconst rpc = new JsonRpc('https://nodes.get-scatter.com', { fetch });\n\nlet gettablerows = async (table,code='eosio',lower_bound='') => {\n    const resp = await rpc.get_table_rows({\n        json: true,              // Get the response as json\n        code,     // Contract that we target\n        scope: code,         // Account that owns the data\n        table,        // Table name\n        lower_bound,        // account name is held here\n        limit: 1               // Maximum number of rows that we want to get\n    });\n\n    return resp\n}\n\nlet rexCost =  async(howMuchNeedToRent) => {\n    // calculate how much it costs to rent\n    let rexpool = await gettablerows('rexpool')\n    let { rows } = rexpool\n    rows = rows[0]      // grab first row\n\n    // how much EOS staked you get from spending 1 EOS.\n    const total_unlent = rows.total_unlent.split(\" \")[0]\n    const total_rent = rows.total_rent.split(\" \")[0]\n    let resourcesFor1EOS = total_unlent / (total_rent + 1)\n\n    return howMuchNeedToRent / resourcesFor1EOS\n}\n\nlet cpu = async () => {\n    let resp = await rpc.get_account('cypherglasss')\n\n    const cpu_weight = resp.total_resources.cpu_weight.split(\" \")[0]\n    const cpu_limit = resp.cpu_limit.max\n    const cpu_avail = cpu_limit / 1000\n    const pp_cpu = cpu_weight / cpu_avail\n\n    // get rex (renatl) cost. (x1000 because in batches of 1000ms)\n    const pp_cpu_rent = await rexCost(pp_cpu*1000)\n\n    return { pp_cpu, pp_cpu_rent }\n}\n\nlet net = async () => {\n    let resp = await rpc.get_account('cypherglasss')\n\n    const net_weight = resp.total_resources.net_weight.split(\" \")[0]\n    const net_limit = resp.net_limit.max\n    const net_avail = net_limit / 1024\n    const pp_net = net_weight / net_avail\n\n    // get rex (renatl) cost. (x1000 because in batches of 1000ms)\n    const pp_net_rent = await rexCost(pp_net*1000)\n\n    \n    return { pp_net, pp_net_rent }\n}\n\nlet ram = async () => {\n    let resp = await gettablerows('rammarket')\n    let { rows } = resp\n    rows = rows[0]      // grab first row\n\n    // price per byte..\n    const quote = rows.quote.balance.split(\" \")[0]\n    const base = rows.base.balance.split(\" \")[0]\n    let pp_byte =  quote / base\n    let pp_kb = pp_byte * 1024\n    return {pp_byte, pp_kb}\n}\n\nlet round = (num,places=4) => {\n    if(!num) return num\n    return num.toFixed(places)\n}\n\nlet autoscaleBalance = async (account_name) => {\n    let balance = await gettablerows('deposits','autoscale.x',account_name)\n    return balance\n}\n\nlet objectHash = {\n    cpu,\n    net,\n    ram,\n    round,\n    autoscaleBalance\n}\n\nexport default objectHash;","import React from 'react';\nimport { Icon, Placeholder } from 'semantic-ui-react'\n\nimport costs from '../../helpers/costs'\n\n\nclass ControlPanel extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            autoscale_balance: 0,\n            balance_loading: true\n        }\n        this.getBalance = this.getBalance.bind(this)\n    }\n\n    async componentDidMount() {\n        await this.getBalance()\n    }\n\n    async getBalance() {\n        // load user autoscale balance\n        if (this.props.account) {\n            // set loader.\n            this.setState({ ...this.state, balance_loading: true })\n\n            let resp = await costs.autoscaleBalance(this.props.account)\n            let autoscale_balance = 0\n            if (resp.rows.length) {\n                // user has a balance\n                autoscale_balance = resp.rows[0].balance / 10000\n            }\n\n            // turn off loader and set balance.\n            this.setState({ ...this.state, autoscale_balance, balance_loading: false })\n        }\n    }\n\n\n    render() {\n        // loading bar...\n        if (this.state.balance_loading)\n            return (\n                <Placeholder>\n                    <Placeholder.Paragraph>\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                    </Placeholder.Paragraph>\n                </Placeholder>\n            )\n\n        // load balance\n        return (\n            <div>\n                <h3>{this.state.autoscale_balance.toFixed(4)} EOS</h3>\n                {this.state.autoscale_balance === 0 ?\n                    <span>Deposit EOS to enable Autoscale. <Icon name=\"shield\" color='red' /></span> :\n                    this.state.autoscale_balance < .10 ?\n                    <span>Low balance, refill to avoid interruption. <Icon name=\"warning sign\" color='orange' /></span> :\n                        <span>Your account is protected. <Icon name=\"check\" color='green' /></span>}\n            </div>\n        );\n    }\n}\n\nexport default ControlPanel;\n","import React from 'react';\nimport { Button, Table, Icon } from 'semantic-ui-react'\n\n\nclass Priority extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n        }\n        this.switchPriority = this.switchPriority.bind(this)\n    }\n\n    switchPriority() {\n        alert(\"Coming soon..\")\n    }\n\n    render() {\n        return (\n            <Table basic='very'>\n\n                <Table.Body>\n                    <Table.Row positive>\n                        <Table.Cell style={{width:'70%'}}>\n                            <h5><Icon name='arrow alternate circle up' />CPU/NET ONLY</h5>\n                            Autoscale monitors account for sufficient CPU and NET resources but not RAM.\n                        </Table.Cell>                        \n                        <Table.Cell><Button basic disabled={true} onClick={this.switchPriority}>Active</Button></Table.Cell>\n                    </Table.Row>\n                    <Table.Row>\n                    <Table.Cell>\n                            <h5><Icon name='plus circle' />CPU/NET +RAM</h5>\n                            Autoscale monitors all account resources. Note: RAM use depletes balance faster.\n                        </Table.Cell> \n                        <Table.Cell><Button basic onClick={this.switchPriority}>Switch</Button></Table.Cell>\n                    </Table.Row>\n                    <Table.Row>\n                        <Table.Cell>\n                            <h5><Icon name='pause circle' />PAUSE AUTOSCALE</h5>\n                            Autoscale will be turned off and not monitor your account for resources.\n                        </Table.Cell>\n                        <Table.Cell><Button basic onClick={this.switchPriority}>Switch</Button></Table.Cell>\n                    </Table.Row>                    \n                </Table.Body>\n            </Table>\n        );\n    }\n}\n\nexport default Priority;\n\n\n\n\n","import React from 'react';\nimport { Button, Table, Icon } from 'semantic-ui-react'\nimport costs from '../../helpers/costs'\n\n\nclass Estimator extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n        }\n\n    }\n\n\n    render() {\n        let { payment } = this.props\n        if(!payment || payment > 500) payment = 1\n\n        let {cpu_prices, net_prices, ram_prices} = window\n        let days_cpu = parseInt((payment / cpu_prices.pp_cpu_rent) * 30)\n        let days_net = parseInt((payment / net_prices.pp_net_rent) * 30)\n        let days_ram = parseInt((payment / (ram_prices.pp_byte * 1000)) * 30)\n\n        return (\n            <Table basic='very' compact='very'>\n                <Table.Body>\n                    <Table.Row>\n                        <Table.Cell>{parseFloat(payment).toFixed(4)} <br /> EOS Token = </Table.Cell>\n                        <Table.Cell><h4><Icon name='cog' color='grey' /> CPU</h4> {days_cpu} Days</Table.Cell>\n                        <Table.Cell><h4><Icon name='plug' color='grey' /> NET</h4> {days_net} Days</Table.Cell>\n                        <Table.Cell><h4><Icon name='globe' color='grey' /> RAM</h4>{days_ram} Days</Table.Cell>\n                    </Table.Row>\n                </Table.Body>\n            </Table>\n        );\n    }\n}\n\nexport default Estimator;\n\n\n\n\n","import React from 'react';\nimport { Tab, Input, Modal, Loader, Button, Table, Dimmer, Image, Segment, Icon } from 'semantic-ui-react'\nimport scatter from '../../helpers/scatter'\n\nimport Balance from './Balance'\nimport Priority from './Priority';\nimport Estimator from './Estimator';\n\n\nclass ControlPanel extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      connection: false,\n      depositLoading: false,\n      depositAmt: 0.5,\n      autoscale_balance: 0,\n      showBalance: true // render balance component\n    }\n    this.openWallet = this.openWallet.bind(this)\n    this.logoutScatter = this.logoutScatter.bind(this)\n    this.transferTokens = this.transferTokens.bind(this)\n    this.setDepositAmt = this.setDepositAmt.bind(this)\n    this.depositCompleted = this.depositCompleted.bind(this)\n    this.depositCanceled = this.depositCanceled.bind(this)\n  }\n\n  async componentDidMount() {\n    await this.openWallet()\n  }\n\n  async openWallet() {\n    let connection = await scatter.init()\n    console.log(\"connected\")\n    console.log(connection)\n\n    if (!this.state.connection) {\n      // save conn variable\n      this.setState({ ...this.state, connection })\n    }\n  }\n\n  logoutScatter() {\n    scatter.logout()\n    window.location.reload()\n  }\n\n  transferTokens() {\n    this.setState({ depositLoading: true })   // turns on loader\n    // invokes scatter, 2nd param called to stop loader on button.\n    scatter.transfer(this.state.depositAmt, this.depositCompleted, this.depositCanceled)\n  }\n\n  setDepositAmt(e) {\n    let depositAmt = e.target.value   // grab textinput val\n    this.setState({ ...this.state, depositAmt })    // save to state.\n  }\n\n  depositCompleted() {\n    // stops loading\n    this.setState({ ...this.state, depositLoading: false })\n    // refresh balance\n    setTimeout(() => {\n      this.setState({ ...this.state, showBalance: false }, () => {\n        this.setState({ ...this.state, showBalance: true })\n      })\n    }, 800)\n  }\n\n  depositCanceled() {\n    this.setState({ ...this.state, depositLoading: false })\n  }\n\n  renderTable(connection) {\n    let { account } = connection\n    return (\n      <Table basic='very'>\n\n        <Table.Body>\n          <Table.Row>\n            <Table.Cell width={4}>User Account</Table.Cell>\n            <Table.Cell>\n              <h2>\n                <span className=\"color\">{account.name}</span> &nbsp;\n            <a href={`https://bloks.io/account/${account.name}`} target=\"_blank\" rel=\"noopener noreferrer\"><Icon name=\"globe\"></Icon></a>\n                <Icon name=\"sign-out\" style={{ cursor: 'pointer' }} onClick={this.logoutScatter} />\n              </h2>\n            </Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>Autoscale Balance</Table.Cell>\n            <Table.Cell>\n              {this.state.showBalance ? <Balance account={account.name} /> : null}\n            </Table.Cell>\n          </Table.Row>\n        </Table.Body>\n      </Table>\n    )\n  }\n\n  renderTabs() {\n\n    let depositEOS = <Tab.Pane>\n      <Input style={{ width: '100px' }} type=\"number\" name=\"quantity\" onChange={this.setDepositAmt} value={this.state.depositAmt} min=\"0\" max=\"500\" />\n      &nbsp;\n    <Button onClick={this.transferTokens} loading={this.state.depositLoading}>Deposit</Button>\n      <div className=\"spacer\" />\n      You can also send EOS tokens to <b>autoscale.x</b>\n      <Estimator payment={this.state.depositAmt} />\n      <div className=\"spacer\" />\n      Calculation based on current market prices. Assumption of 1000ms CPU daily or 1000kb NET daily or 1000bytes RAM monthly.\n    </Tab.Pane>\n\n    let resourceSettings = <Tab.Pane>\n      <Priority />\n    </Tab.Pane>\n\n    const panes = [\n      { menuItem: 'Deposit EOS', render: () => depositEOS },\n      { menuItem: 'Resource Settings', render: () => resourceSettings }\n    ]\n\n    return <Tab panes={panes} />\n\n  }\n\n  render() {\n    return (\n      <Modal size={'tiny'} open={true} onClose={this.props.closeModal}>\n        <Modal.Content>\n          {this.state.connection ?\n            <div>\n              {this.renderTable(this.state.connection)}\n              <div className=\"spacer\" />\n              {this.renderTabs()}\n            </div>\n\n            :\n            <div>\n              <Segment basic>\n                <Dimmer active inverted>\n                  <Loader inverted>Connecting to Scatter...</Loader>\n                </Dimmer>\n                <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png' />\n              </Segment>\n              <Button onClick={this.openWallet}>Retry wallet</Button>\n            </div>\n\n          }\n        </Modal.Content>\n      </Modal>\n    );\n  }\n}\n\nexport default ControlPanel;\n","import React from 'react';\nimport { Card, Image, Placeholder } from 'semantic-ui-react'\nimport cpu_image from '../images/cpu.png'\nimport costs from '../helpers/costs'\n\nclass CPU extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            prices: false\n        }\n    }\n\n    async componentDidMount() {\n        let prices = await costs.cpu()\n        window.cpu_prices = prices\n        this.setState({ prices })\n    }\n\n    render() {\n        return (\n\n            <Card fluid>\n                <Image src={cpu_image} wrapped ui={false} style={{ 'padding': '2em' }} />\n                <Card.Content>\n                    <Card.Header>CPU</Card.Header>\n                    <Card.Description>\n                        Amount of time the network can spend processing your transactions.\n                  </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                    {this.state.prices ?\n                        <table>\n                            <tbody>\n                                <tr>\n                                    <td>30-day Cost:</td>\n                                    <td><h3 className='color'>{costs.round(this.state.prices.pp_cpu_rent, 6)} EOS</h3></td>\n                                </tr>\n                                <tr>\n                                    <td></td>\n                                    <td>for 1.0s CPU Daily</td>\n                                </tr>\n                                <tr>\n                                    <td>Source:</td>\n                                    <td>eosio.rexpool</td>\n                                </tr>\n                                <tr>\n                                    <td>Stake Basis:</td>\n                                    <td>1ms for {costs.round(this.state.prices.pp_cpu, 4)} EOS</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        :\n                        <Placeholder>\n                            <Placeholder.Paragraph>\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                            </Placeholder.Paragraph>\n                        </Placeholder>\n                    }\n                </Card.Content>\n            </Card>\n\n        );\n    }\n}\n\nexport default CPU;\n","import React from 'react';\nimport { Card, Image, Placeholder } from 'semantic-ui-react'\nimport net_image from '../images/net.png'\nimport costs from '../helpers/costs'\n\nclass NET extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            prices: false\n        }\n    }\n\n    async componentDidMount() {\n        let prices = await costs.net()\n        window.net_prices = prices\n        this.setState({ prices })\n    }\n\n    render() {\n        return (\n\n            <Card fluid>\n                <Image src={net_image} wrapped ui={false} style={{ 'padding': '2em' }} />\n                <Card.Content>\n                    <Card.Header>NET</Card.Header>\n                    <Card.Description>\n                        Amount of data the network can transfer during your transactions.\n                  </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                    {this.state.prices ?\n                        <table>\n                            <tbody>\n                                <tr>\n                                    <td>30-day Cost:</td>\n                                    <td><h3 className='color'>{costs.round(this.state.prices.pp_net_rent, 6)} EOS</h3></td>\n                                </tr>\n                                <tr>\n                                    <td></td>\n                                    <td>for 1mb NET Daily</td>\n                                </tr>\n                                <tr>\n                                    <td>Source:</td>\n                                    <td>eosio.rexpool</td>\n                                </tr>\n                                <tr>\n                                    <td>Stake Basis:</td>\n                                    <td>1kb for {costs.round(this.state.prices.pp_net, 4)} EOS</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        :\n                        <Placeholder>\n                            <Placeholder.Paragraph>\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                            </Placeholder.Paragraph>\n                        </Placeholder>\n                    }\n                </Card.Content>\n            </Card>\n\n        );\n    }\n}\n\nexport default NET;\n","import React from 'react';\nimport { Card, Image, Placeholder } from 'semantic-ui-react'\nimport ram_image from '../images/ram.png'\nimport costs from '../helpers/costs'\n\nclass RAM extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            prices: false\n        }\n    }\n\n    async componentDidMount() {\n        let prices = await costs.ram()\n        window.ram_prices = prices\n        this.setState({ prices })\n    }\n\n    render() {\n        return (\n\n            <Card fluid>\n                <Image src={ram_image} wrapped ui={false} style={{ 'padding': '2em' }} />\n                <Card.Content>\n                    <Card.Header>RAM</Card.Header>\n                    <Card.Description>\n                        Storage for application data and smart contracts on the blockchain.\n              </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                    {this.state.prices ?\n                        <table>\n                            <tbody>\n                                <tr>\n                                    <td>Exchange:</td>\n                                    <td><h3 className='color'>1kb = {costs.round(this.state.prices.pp_kb, 4)} EOS</h3></td>\n                                </tr>\n                                <tr>\n                                    <td></td>\n                                    <td>{costs.round(this.state.prices.pp_byte, 8)} / byte</td>\n                                </tr>\n                                <tr>\n                                    <td>Source:</td>\n                                    <td>eosio.rammarket</td>\n                                </tr>\n                                <tr>\n                                    <td>Unit Type:</td>\n                                    <td>bytes</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        :\n                        <Placeholder>\n                            <Placeholder.Paragraph>\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                            </Placeholder.Paragraph>\n                        </Placeholder>\n                    }\n                </Card.Content>\n            </Card>\n\n        );\n    }\n}\n\nexport default RAM;\n","import React from 'react';\nimport { Grid, Menu, Icon } from 'semantic-ui-react'\nimport './index.css'\n\nimport ControlPanel from './components/ControlPanel/ControlPanel'\nimport CPUCard from './components/CPU'\nimport NETCard from './components/NET'\nimport RAMCard from './components/RAM'\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      isOpen: false\n    }\n    this.closeModal = this.closeModal.bind(this)\n    this.openModal = this.openModal.bind(this)\n  }\n\n  closeModal(e) {\n    if (e) e.preventDefault()\n    this.setState({ isOpen: false })\n  }\n\n  openModal(e) {\n    if (e) e.preventDefault()\n    this.setState({ isOpen: true })\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n\n        { this.state.isOpen ? <ControlPanel closeModal={this.closeModal} /> : null }\n\n\n        <Menu fixed='top'>\n          <Menu.Item name='home' onClick={this.handleItemClick}>\n            <a href=\"https://autoscale.one\" style={{color:'black'}}>\n            <b>Autoscale</b> <span className=\"hide_small\">&nbsp; | &nbsp; Automatic Scaling</span> for EOS\n            </a>\n        </Menu.Item>\n        <Menu.Menu position='right'>\n            <Menu.Item style={{fontWeight:'bold'}} name='manager' onClick={this.openModal}>\n              <span className='color'><Icon name='rocket' /> Scaling Manager</span>\n            </Menu.Item>\n          </Menu.Menu>\n        </Menu>\n\n        <div className='header_spacer'>&nbsp;</div>\n\n        <Grid textAlign='center'>\n          <Grid container columns={3} stackable>\n            <Grid.Column textAlign='center'>\n              <CPUCard />\n            </Grid.Column>\n            <Grid.Column>\n              <NETCard />\n            </Grid.Column>\n            <Grid.Column>\n              <RAMCard />\n            </Grid.Column>\n          </Grid>\n        </Grid>\n\n        <br />\n        <div>Deposit EOS directly to <b>autoscale.x</b> or use the <b className=\"color\" style={{cursor:'pointer'}} onClick={this.openModal}>scaling manager</b>.</div>\n      </div >\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}