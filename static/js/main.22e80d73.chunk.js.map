{"version":3,"sources":["images/cpu.png","images/net.png","images/ram.png","helpers/scatter.js","components/ControlPanel.js","helpers/costs.js","components/CPU.js","components/NET.js","components/RAM.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ScatterJS","plugins","ScatterEOS","scatter","identity","eos","account","network","Network","fromJson","blockchain","host","port","protocol","chainId","rpc","JsonRpc","fullhost","helpers_scatter","init","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","connect","sent","console","error","abrupt","getIdentity","accounts","Api","log","stop","apply","this","arguments","logout","_ref2","_callee2","_context2","forgetIdentity","transfer","_ref3","_callee3","amt","completed","_context3","transact","actions","name","authorization","actor","permission","authority","data","from","to","quantity","concat","memo","blocksBehind","expireSeconds","t0","_x","_x2","SliderT","createSliderWithTooltip","Slider","ControlPanel","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","connection","depositLoading","depositAmt","cpuReserve","netReserve","ramReserve","autoscale_balance","openWallet","bind","assertThisInitialized","logoutScatter","transferTokens","setDepositAmt","depositCompleted","isOpen","setState","objectSpread","window","location","reload","e","target","value","react_default","createElement","Table","basic","Body","Row","Cell","width","className","href","Icon","style","cursor","onClick","Input","type","onChange","step","min","max","Button","disabled","loading","Segment","color","es","Modal","size","open","onClose","closeModal","Content","renderTable","Dimmer","active","inverted","Loader","Image","src","React","Component","require","fetch","gettablerows","table","resp","get_table_rows","json","code","scope","limit","rexCost","howMuchNeedToRent","rexpool","rows","total_unlent","total_rent","resourcesFor1EOS","split","objectHash","cpu","cpu_weight","cpu_limit","pp_cpu","pp_cpu_rent","get_account","total_resources","net","_ref4","_callee4","net_weight","net_limit","pp_net","pp_net_rent","_context4","ram","_ref5","_callee5","quote","base","pp_byte","pp_kb","_context5","balance","round","num","places","length","undefined","toFixed","CPU","prices","costs","Card","fluid","cpu_image","wrapped","ui","padding","Header","Description","extra","Placeholder","Paragraph","Line","NET","net_image","RAM","ram_image","App","openModal","preventDefault","components_ControlPanel","Menu","fixed","Item","handleItemClick","position","fontWeight","Grid","textAlign","container","columns","stackable","Column","components_CPU","components_NET","components_RAM","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.22e80d73.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cpu.593d32f1.png\";","module.exports = __webpack_public_path__ + \"static/media/net.453fd9e8.png\";","module.exports = __webpack_public_path__ + \"static/media/ram.63c78e1d.png\";","// Importing Scatter and eosjs.\nimport ScatterJS, { Network } from 'scatterjs-core';\nimport ScatterEOS from 'scatterjs-plugin-eosjs2';\nimport { Api, JsonRpc, RpcError, JsSignatureProvider } from 'eosjs';\n// Scatter comes without plugins, so we need to add the eosjs plugin.\nScatterJS.plugins(new ScatterEOS())\n\nconst network = Network.fromJson({\n    blockchain: 'eos',\n    host: 'nodes.get-scatter.com',\n    port: 443,\n    protocol: 'https',\n    chainId: 'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906' // <-- this is the MAINNET\n});\n\nconst rpc = new JsonRpc(network.fullhost());\n\nlet scatter, identity, eos, account;\n\nlet init = async () => {\n    let connected = await ScatterJS.scatter.connect('Autoscale')\n    if(!connected){\n        // Either the user doesn't have Scatter, or it's closed.\n        console.error('Could not connect to Scatter.');\n        return;\n    }\n    \n    scatter = ScatterJS.scatter;\n    identity = await scatter.getIdentity({accounts:[network]});\n    eos = scatter.eos(network, Api, {rpc})\n    account = identity.accounts[0]\n\n    console.log(\"--\")\n    console.log(identity)\n\n    return { scatter, identity, eos, account }\n}\n\nlet logout = async() => {\n    await scatter.forgetIdentity();\n}\n\nlet transfer = async(amt,completed) => {\n    try {\n        const result = await eos.transact({\n            actions: [{\n                account: 'eosio.token',\n                name: 'transfer',\n                authorization: [{\n                    actor: account.name,\n                    permission: account.authority,\n                }],\n                data: {\n                    from: account.name,\n                    to: 'autoscale.x',\n                    quantity: `${amt} EOS`,\n                    memo: account.name,\n                },\n            }]\n        }, {\n            blocksBehind: 3,\n            expireSeconds: 30,\n        });\n        completed();\n    } catch (e) {\n        completed();\n    }\n}\n\nexport default { init, logout, transfer }\n\n","import React from 'react';\nimport { Input, Modal, Loader, Button, Table, Dimmer, Image, Segment, Icon } from 'semantic-ui-react'\nimport scatter from '../helpers/scatter'\n\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst SliderT = createSliderWithTooltip(Slider);\n\nclass ControlPanel extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      connection: false,\n      depositLoading: false,\n      depositAmt: 1.0,\n      cpuReserve: 500,\n      netReserve: 500,\n      ramReserve: 500,\n      autoscale_balance: 0\n    }\n    this.openWallet = this.openWallet.bind(this)\n    this.logoutScatter = this.logoutScatter.bind(this)\n    this.transferTokens = this.transferTokens.bind(this)\n    this.setDepositAmt = this.setDepositAmt.bind(this)\n    this.depositCompleted = this.depositCompleted.bind(this)\n  }\n\n  async componentDidUpdate() {\n    if (this.props.isOpen) {\n      await this.openWallet()\n    }\n  }\n\n  async openWallet() {\n    let connection = await scatter.init()\n    console.log(\"connected\")\n    console.log(connection)\n    \n    if (!this.state.connection) {\n      this.setState({ ...this.state, connection })\n    }\n  }\n\n  logoutScatter() {\n    scatter.logout()\n    window.location.reload()\n  }\n\n  transferTokens() {\n    this.setState({depositLoading: true})   // turns on loader\n    // invokes scatter, 2nd param called to stop loader on button.\n    scatter.transfer(this.state.depositAmt, this.depositCompleted) \n  }\n\n  setDepositAmt(e) {\n    let depositAmt = e.target.value   // grab textinput val\n    this.setState({...this.state, depositAmt})    // save to state.\n  }\n\n  depositCompleted() {\n    // stops loading\n    this.setState({...this.state, depositLoading: false})\n  }\n\n  renderTable(connection) {\n    let account = connection.identity.accounts[0]\n    return (\n      <Table basic='very'>\n      \n      <Table.Body>\n        <Table.Row>\n          <Table.Cell width={4}>User Account</Table.Cell>\n          <Table.Cell>\n            <h2>\n            <span className=\"color\">{account.name}</span> &nbsp; \n            <a href={`https://bloks.io/account/${account.name}`} target=\"_blank\"><Icon name=\"globe\"></Icon></a>\n            <Icon name=\"sign-out\" style={{cursor:'pointer'}} onClick={this.logoutScatter} />\n            </h2>\n          </Table.Cell>\n        </Table.Row>\n        <Table.Row>\n          <Table.Cell>Autoscale Balance</Table.Cell>\n          <Table.Cell>\n            <h3>0.0000 EOS</h3>\n            <i>Low balance; account not protected.</i>\n          </Table.Cell>\n        </Table.Row>\n        <Table.Row>\n          <Table.Cell>Deposit EOS</Table.Cell>\n          <Table.Cell>\n            <Input type=\"number\" name=\"quantity\" onChange={this.setDepositAmt} value={this.state.depositAmt} step=\"0.1\" min=\"0\" max=\"500\" /> \n            &nbsp; \n            <Button disabled={true} onClick={this.transferTokens} loading={this.state.depositLoading}>Deposit</Button>\n            <div className=\"spacer\" />\n            Token deposit <b>disabled</b>, currently in closed beta.\n            {/*You can also send EOS tokens to <b>autoscale.x</b>*/}\n          </Table.Cell>\n        </Table.Row>\n        <Table.Row>\n          <Table.Cell>PRO Tier Tools <br />* coming soon.</Table.Cell>\n          <Table.Cell>\n            With PRO tier you can set the minimum CPU, NET, & RAM that will \n            always be available to your account.\n            <div className=\"spacer\" />\n            <Segment>\n              <div className={'padder'}>\n                <Icon name='globe' color='gray' /> RAM: <b>{this.state.ramReserve}</b> bytes\n                <Slider min={0} max={5000} value={this.state.ramReserve} />\n                <br />\n                <Icon name='cog' /> CPU: <b>{this.state.cpuReserve}</b> milliseconds\n                <SliderT min={0} max={5000} value={this.state.cpuReserve} />\n                <br />\n                <Icon name='plug' /> NET: <b>{this.state.netReserve}</b> kilobytes\n                <Slider min={0} max={5000} value={this.state.netReserve} />\n              </div>\n            </Segment>      \n          </Table.Cell>\n        </Table.Row>\n      </Table.Body>\n  \n\n    </Table>\n    )\n  }\n\n  render() {\n    return (\n      <Modal size={'tiny'} open={this.props.isOpen} onClose={this.props.closeModal}>\n        <Modal.Content>\n          {this.state.connection ?     \n            this.renderTable(this.state.connection)\n          :\n            <div>\n              <Segment basic>\n                <Dimmer active inverted>\n                  <Loader inverted>Connecting to Scatter...</Loader>\n                </Dimmer>\n                <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png' />\n              </Segment>\n              <a href=\"#\" onClick={this.openWallet}>Retry wallet</a>\n            </div>\n\n          }\n        </Modal.Content>\n      </Modal>\n    );\n  }\n}\n\nexport default ControlPanel;\n","const { JsonRpc } = require('eosjs');\nconst rpc = new JsonRpc('https://nodes.get-scatter.com', { fetch });\n\nlet gettablerows = async (table) => {\n    const resp = await rpc.get_table_rows({\n        json: true,              // Get the response as json\n        code: 'eosio',     // Contract that we target\n        scope: 'eosio',         // Account that owns the data\n        table: table,        // Table name\n        limit: 1               // Maximum number of rows that we want to get\n    });\n\n    return resp\n}\n\nlet rexCost =  async(howMuchNeedToRent) => {\n    // calculate how much it costs to rent\n    let rexpool = await gettablerows('rexpool')\n    let { rows } = rexpool\n    rows = rows[0]      // grab first row\n\n    // how much EOS staked you get from spending 1 EOS.\n    const total_unlent = rows.total_unlent.split(\" \")[0]\n    const total_rent = rows.total_rent.split(\" \")[0]\n    let resourcesFor1EOS = total_unlent / (total_rent + 1)\n\n    return howMuchNeedToRent / resourcesFor1EOS\n}\n\nlet cpu = async () => {\n    let resp = await rpc.get_account('cypherglasss')\n\n    const cpu_weight = resp.total_resources.cpu_weight.split(\" \")[0]\n    const cpu_limit = resp.cpu_limit.max\n    const cpu_avail = cpu_limit / 1000\n    const pp_cpu = cpu_weight / cpu_avail\n\n    // get rex (renatl) cost. (x1000 because in batches of 1000ms)\n    const pp_cpu_rent = await rexCost(pp_cpu*1000)\n\n    return { pp_cpu, pp_cpu_rent }\n}\n\nlet net = async () => {\n    let resp = await rpc.get_account('cypherglasss')\n\n    const net_weight = resp.total_resources.net_weight.split(\" \")[0]\n    const net_limit = resp.net_limit.max\n    const net_avail = net_limit / 1024\n    const pp_net = net_weight / net_avail\n\n    // get rex (renatl) cost. (x1000 because in batches of 1000ms)\n    const pp_net_rent = await rexCost(pp_net*1000)\n\n    \n    return { pp_net, pp_net_rent }\n}\n\nlet ram = async () => {\n    let resp = await gettablerows('rammarket')\n    let { rows } = resp\n    rows = rows[0]      // grab first row\n\n    // price per byte..\n    const quote = rows.quote.balance.split(\" \")[0]\n    const base = rows.base.balance.split(\" \")[0]\n    let pp_byte =  quote / base\n    let pp_kb = pp_byte * 1024\n    return {pp_byte, pp_kb}\n}\n\nlet round = (num,places=4) => {\n    if(!num) return num\n    return num.toFixed(places)\n}\n\nlet objectHash = {\n    cpu,\n    net,\n    ram,\n    round\n}\n\nexport default objectHash;","import React from 'react';\nimport { Card, Image, Placeholder } from 'semantic-ui-react'\nimport cpu_image from '../images/cpu.png'\nimport costs from '../helpers/costs'\n\nclass CPU extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            prices: false\n        }\n    }\n\n    async componentDidMount() {\n        let prices = await costs.cpu()\n        this.setState({ prices })\n    }\n\n    render() {\n        return (\n\n            <Card fluid>\n                <Image src={cpu_image} wrapped ui={false} style={{ 'padding': '2em' }} />\n                <Card.Content>\n                    <Card.Header>CPU</Card.Header>\n                    <Card.Description>\n                        Amount of time the network can spend processing your transactions.\n                  </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                    {this.state.prices ?\n                        <table>\n                            <tbody>\n                                <tr>\n                                    <td>30-day Cost:</td>\n                                    <td><h3 className='color'>{costs.round(this.state.prices.pp_cpu_rent, 6)} EOS</h3></td>\n                                </tr>\n                                <tr>\n                                    <td></td>\n                                    <td>for 1.0s CPU Daily</td>\n                                </tr>\n                                <tr>\n                                    <td>Source:</td>\n                                    <td>eosio.rexpool</td>\n                                </tr>\n                                <tr>\n                                    <td>Stake Basis:</td>\n                                    <td>1ms / {costs.round(this.state.prices.pp_cpu, 4)} EOS</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        :\n                        <Placeholder>\n                            <Placeholder.Paragraph>\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                            </Placeholder.Paragraph>\n                        </Placeholder>\n                    }\n                </Card.Content>\n            </Card>\n\n        );\n    }\n}\n\nexport default CPU;\n","import React from 'react';\nimport { Card, Image, Placeholder } from 'semantic-ui-react'\nimport net_image from '../images/net.png'\nimport costs from '../helpers/costs'\n\nclass NET extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            prices: false\n        }\n    }\n\n    async componentDidMount() {\n        let prices = await costs.net()\n        this.setState({ prices })\n    }\n\n    render() {\n        return (\n\n            <Card fluid>\n                <Image src={net_image} wrapped ui={false} style={{ 'padding': '2em' }} />\n                <Card.Content>\n                    <Card.Header>NET</Card.Header>\n                    <Card.Description>\n                        Amount of data the network can transfer during your transactions.\n                  </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                    {this.state.prices ?\n                        <table>\n                            <tbody>\n                                <tr>\n                                    <td>30-day Cost:</td>\n                                    <td><h3 className='color'>{costs.round(this.state.prices.pp_net_rent, 6)} EOS</h3></td>\n                                </tr>\n                                <tr>\n                                    <td></td>\n                                    <td>for 1mb NET Daily</td>\n                                </tr>\n                                <tr>\n                                    <td>Source:</td>\n                                    <td>eosio.rexpool</td>\n                                </tr>\n                                <tr>\n                                    <td>Stake Basis:</td>\n                                    <td>1kb / {costs.round(this.state.prices.pp_net, 4)} EOS</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        :\n                        <Placeholder>\n                            <Placeholder.Paragraph>\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                            </Placeholder.Paragraph>\n                        </Placeholder>\n                    }\n                </Card.Content>\n            </Card>\n\n        );\n    }\n}\n\nexport default NET;\n","import React from 'react';\nimport { Card, Image, Placeholder } from 'semantic-ui-react'\nimport ram_image from '../images/ram.png'\nimport costs from '../helpers/costs'\n\nclass RAM extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            prices: false\n        }\n    }\n\n    async componentDidMount() {\n        let prices = await costs.ram()\n        this.setState({ prices })\n    }\n\n    render() {\n        return (\n\n            <Card fluid>\n                <Image src={ram_image} wrapped ui={false} style={{ 'padding': '2em' }} />\n                <Card.Content>\n                    <Card.Header>RAM</Card.Header>\n                    <Card.Description>\n                        Storage for application data and smart contracts on the blockchain.\n              </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                    {this.state.prices ?\n                        <table>\n                            <tbody>\n                                <tr>\n                                    <td>Exchange:</td>\n                                    <td><h3 className='color'>1kb = {costs.round(this.state.prices.pp_kb, 4)} EOS</h3></td>\n                                </tr>\n                                <tr>\n                                    <td></td>\n                                    <td>{costs.round(this.state.prices.pp_byte, 8)} / byte</td>\n                                </tr>\n                                <tr>\n                                    <td>Source:</td>\n                                    <td>eosio.rammarket</td>\n                                </tr>\n                                <tr>\n                                    <td>Unit Type:</td>\n                                    <td>bytes</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        :\n                        <Placeholder>\n                            <Placeholder.Paragraph>\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                            </Placeholder.Paragraph>\n                        </Placeholder>\n                    }\n                </Card.Content>\n            </Card>\n\n        );\n    }\n}\n\nexport default RAM;\n","import React from 'react';\nimport { Button, Grid, Menu, Icon } from 'semantic-ui-react'\nimport './index.css'\n\nimport ControlPanel from './components/ControlPanel'\nimport CPUCard from './components/CPU'\nimport NETCard from './components/NET'\nimport RAMCard from './components/RAM'\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      isOpen: false\n    }\n    this.closeModal = this.closeModal.bind(this)\n    this.openModal = this.openModal.bind(this)\n  }\n\n  closeModal(e) {\n    if (e) e.preventDefault()\n    this.setState({ isOpen: false })\n  }\n\n  openModal(e) {\n    if (e) e.preventDefault()\n    this.setState({ isOpen: true })\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n\n        <ControlPanel\n          isOpen={this.state.isOpen}\n          closeModal={this.closeModal}\n        />\n\n\n        <Menu fixed='top'>\n          <Menu.Item name='home' onClick={this.handleItemClick}>\n            <a href=\"https://autoscale.one\" style={{color:'black'}}>\n            <b>Autoscale</b> <span className=\"hide_small\">&nbsp; | &nbsp; Automatic Scaling</span> for EOS\n            </a>\n        </Menu.Item>\n        <Menu.Menu position='right'>\n            <Menu.Item style={{fontWeight:'bold'}} name='manager' onClick={this.openModal}>\n              <span className='color'><Icon name='rocket' /> Scaling Manager</span>\n            </Menu.Item>\n          </Menu.Menu>\n        </Menu>\n\n        <div className='header_spacer'>&nbsp;</div>\n\n        <Grid textAlign='center'>\n          <Grid container columns={3} stackable>\n            <Grid.Column textAlign='center'>\n              <CPUCard />\n            </Grid.Column>\n            <Grid.Column>\n              <NETCard />\n            </Grid.Column>\n            <Grid.Column>\n              <RAMCard />\n            </Grid.Column>\n          </Grid>\n        </Grid>\n\n        <br />\n        <div>Deposit EOS directly to <b>autoscale.x</b> or use the <b className=\"color\" style={{cursor:'pointer'}} onClick={this.openModal}>scaling manager</b>.</div>\n      </div >\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}